labels = c("S","M","M","G"))
# viendo el orden en los niveles
tallas_ordenado
# graficando el factor ordenado
plot(tallas_ordenado)
library(FinancialMath)
library(reticulate)
detach("package:reticulate", unload = TRUE)
library(reticulate)
detach("package:reticulate", unload = TRUE)
library(reticulate)
library(reticulate)
library(reticulate)
library(reticulate)
virtualenv_create("r-reticulate-new")
use_virtualenv("r-reticulate-new", required = TRUE)
library(reticulate)
virtualenv_create("r-reticulate-new")
use_virtualenv("r-reticulate-new", required = TRUE)
conda env remove --name r-reticulate-new
library(reticulate)
virtualenv_create("r-reticulate-new")
use_virtualenv("r-reticulate-new", required = TRUE)
library(reticulate)
use_virtualenv("r-reticulate-new", required = TRUE)
py_config()
py_install("pandas")
py_run_string("import pandas as pd")
remotes::install_github("rstudio/reticulate")
reticulate::install_miniconda()
install.packages("reticulate")
install.packages("reticulate")
library(reticulate)
use_python("C:/ruta/a/tu/python.exe", required = TRUE)
#use_python("C:/Users/USER/anaconda3/python311.dll", required = TRUE)
```
install.packages("FinancialMath")
install.packages("reticulate")
install.packages("png")
install.packages("png")
install.packages("png")
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
View(PAA_2024)
library(ggplot2)
data <- readxl::read_excel("Data/PAA-2024.xlsx")
data <- data[c(2,10)]
library(ggplot2)
ggplot(data, aes(y = `Valor estimado en la vigencia actual`)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "black", alpha = 0.7) +
theme_minimal() +
labs(title = "Histogram of PAA_2024 Column 10",
x = "Value",
y = "Frequency")
ggplot(data, aes(y = `Valor estimado en la vigencia actual`)) +
geom_histogram(binwidth = 1000000, fill = "blue", color = "black", alpha = 0.7) +
theme_minimal() +
labs(title = "Histogram of PAA_2024 Column 10",
x = "Value",
y = "Frequency")
ggplot(data,aes(x=data$Descripción,
y = data$`Valor estimado en la vigencia actual`)) +
geom_bar(binwidth=1)
ggplot(data,aes(x=Descripción,
y = `Valor estimado en la vigencia actual`)) +
geom_bar(binwidth=1)
library(ggplot2)
ggplot(data,aes(x=Descripción,
y = `Valor estimado en la vigencia actual`)) +
geom_bar(binwidth=1000000)
rlang::last_trace()
ggplot(data,aes(x=reorder(Descripción, `Valor estimado en la vigencia actual`),
y = `Valor estimado en la vigencia actual`)) +
geom_bar(binwidth=1000000)
ggplot(data,aes(x=reorder(Descripción, `Valor estimado en la vigencia actual`),
y = `Valor estimado en la vigencia actual`)) +
geom_bar()
library(dplyr)
library(forcats)
data %>% mutate(name = fct_reorder(Descripción, `Valor estimado en la vigencia actual`)) %>%
ggplot( aes(x=Descripción, y=`Valor estimado en la vigencia actual`)) +
geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
coord_flip() +
xlab("") +
theme_bw()
rlang::last_trace()
data <- na.omit(data[c(2,10)])
data <- readxl::read_excel("Data/PAA-2024.xlsx")
data <- readxl::read_excel("Data/PAA-2024.xlsx")
data <- na.omit(data[c(2,10)])
library(dplyr)
library(forcats)
data %>% mutate(name = fct_reorder(Descripción, `Valor estimado en la vigencia actual`)) %>%
ggplot( aes(x=Descripción, y=`Valor estimado en la vigencia actual`)) +
geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
coord_flip() +
xlab("") +
theme_bw()
View(PAA_2024)
data <- readxl::read_excel("Data/PAA-2024.xlsx")
data <- na.omit(data[c(2,4)])
library(dplyr)
library(forcats)
data %>% mutate(name = fct_reorder(Descripción, `Fecha estimada de presentación de ofertas (mes)`)) %>%
ggplot( aes(x=Descripción, y=`Fecha estimada de presentación de ofertas (mes)`)) +
geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
coord_flip() +
xlab("") +
theme_bw()
data <- readxl::read_excel("Data/PAA-2024.xlsx")
data <- na.omit(data[c(4,10)])
library(dplyr)
library(forcats)
data %>% mutate(name = fct_reorder(`Valor estimado en la vigencia actual`, `Fecha estimada de presentación de ofertas (mes)`)) %>%
ggplot( aes(x=`Valor estimado en la vigencia actual`, y=`Fecha estimada de presentación de ofertas (mes)`)) +
geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
coord_flip() +
xlab("") +
theme_bw()
data <- readxl::read_excel("Data/PAA-2024.xlsx")
data <- na.omit(data[c(4,10)])
library(dplyr)
library(forcats)
data %>% mutate(name = fct_reorder(`Valor estimado en la vigencia actual`, `Fecha estimada de presentación de ofertas (mes)`)) %>%
ggplot( aes(x=`Valor estimado en la vigencia actual`, y=`Fecha estimada de presentación de ofertas (mes)`)) +
geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
coord_flip() +
xlab("") +
theme_bw()
View(data)
variable.names(PAA_2024)
library(knitr)
library(broom)
library(kableExtra)
data <- readxl::read_excel("Data/PAA-2024.xlsx")
data <- data[c(2,10)]
html_table <- kable(data, format = "html")%>%
kable_styling()
# Print the HTML table
html_table
library(knitr)
library(broom)
library(kableExtra)
data <- readxl::read_excel("Data/PAA-2024.xlsx")
data <- data[c(2,7,14,15,17)]
html_table <- kable(data, format = "html")%>%
kable_styling()
# Print the HTML table
html_table
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
variable.names(PAA_2024)
library(knitr)
library(broom)
library(kableExtra)
data <- readxl::read_excel("Data/PAA-2024.xlsx")
data <- data[c(2,7,14,15,17)]
html_table <- kable(data, format = "html")%>%
kable_styling()
# Print the HTML table
html_table
correos<-data$`Correo electrónico del responsable`
correos_validos <-correos[grepl("^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$", correos)]
Print(correos_validos)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
correos<-data$`Correo electrónico del responsable`
correos_validos <-correos[grepl("^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$", correos)]
Print(correos_validos)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
correos<-data$`Correo electrónico del responsable`
correos_validos <-correos[grepl("^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$", correos)]
print(correos_validos)
library(knitr)
library(broom)
library(kableExtra)
data <- readxl::read_excel("Data/PAA-2024.xlsx")
data <- data[c(2,7,14,15,17)]
html_table <- kable(data, format = "html")%>%
kable_styling()
# Print the HTML table
html_table
library(dplyr)
datos_responsables <- data %>%
select(Nombre_del_responsable = `Nombre del responsable`,
Correo_responsable = `correo electrónico del responsable`,
Ubicacion = `ubicación`)
data <- readxl::read_excel("Data/PAA-2024.xlsx")
data <- na.omit(data[c(2,7,14,15,17)])
colnames(data)[1] <- ""
colnames(data)[2] <- "Valor"
library(dplyr)
datos_responsables <- data %>%
select(Nombre_del_responsable = `Nombre del responsable`,
Correo_responsable = `correo electrónico del responsable`,
Ubicacion = `ubicación`)
data <- readxl::read_excel("Data/PAA-2024.xlsx")
library(dplyr)
datos_responsables <- data %>%
select(Nombre_del_responsable = `Nombre del responsable`,
Correo_responsable = `correo electrónico del responsable`,
Ubicacion = `ubicación`)
data <- readxl::read_excel("Data/PAA-2024.xlsx")
library(dplyr)
datos_responsables <- data %>%
select(Nombre_del_responsable = `Nombre del responsable`,
Correo_responsable = `correos_validos`,
Ubicacion = `ubicación`)
data <- readxl::read_excel("Data/PAA-2024.xlsx")
library(dplyr)
datos_responsables <- data %>%
select(Nombre_del_responsable = `Nombre del responsable`,
Correo_responsable = `correos_validos`,
Ubicacion = `Ubicación`)
data <- readxl::read_excel("Data/PAA-2024.xlsx")
library(dplyr)
datos_responsables <- data %>%
select(Nombre_del_responsable = `Nombre del responsable`,
Correo_responsable = `correo electrónico del resposable`,
Ubicacion = `Ubicación`)
data <- readxl::read_excel("Data/PAA-2024.xlsx")
library(dplyr)
datos_responsables <- data %>%
select(Nombre_del_responsable = `Nombre del responsable`,
Correo_responsable = `correos_validos`,
Ubicacion = `Ubicación`)
data <- readxl::read_excel("Data/PAA-2024.xlsx")
names(data)
library(dplyr)
datos_responsables <- data %>%
select(Nombre_del_responsable = `Nombre del responsable`,
Correo_responsable = `correo electrónico del responsable`,
Ubicacion = `Ubicación`)
data <- readxl::read_excel("Data/PAA-2024.xlsx")
names(data)
library(dplyr)
datos_responsables <- data %>%
select(Nombre_del_responsable = `Nombre del responsable`,
Correo_responsable = `correo electrónico del responsable`,
Ubicacion = `Ubicación`)
data <- readxl::read_excel("Data/PAA-2024.xlsx")
names(data)
library(dplyr)
datos_responsables <- data %>%
select(Nombre_del_responsable = `Nombre del responsable`,
Correo_responsable = `Correo electrónico del responsable`,
Ubicacion = `Ubicación`)
head(datos_responsables)
write.csv(datos_responsables, file = "datos_responsables.csv", row.names = FALSE)
# Filtrar responsables en Bogotá y Barrancabermeja
datos_responsables_filtrados <- datos_responsables %>%
filter(Ubicacion %in% c("Bogotá", "Barrancabermeja"))
View(datos_responsables)
data <- readxl::read_excel("Data/PAA-2024.xlsx")
data <- na.omit(data[c(9)])
valor_total_inversion <- sum(data$Inversion, na.rm = TRUE)
print(valor_total_inversion)
data <- readxl::read_excel("Data/PAA-2024.xlsx")
data <- na.omit(data[c(9)])
valor_total_inversion <- sum(data$`Valor total estimado`, na.rm = TRUE)
print(valor_total_inversion)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
library(dplyr)
correosBogota <- filter(PAA_2024, grepl('Bogotá', Ubicación))
correosBarrancabermeja <- filter(PAA_2024, grepl('Barrancabermeja', Ubicación))
unique(correosBogota$`Nombre del responsable`)
unique(correosBarrancabermeja$`Nombre del responsable`)
View(correosBogota)
View(correosBarrancabermeja)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
library(dplyr)
correosBogota <- filter(PAA_2024, grepl('Bogotá', Ubicación))
correosBarrancabermeja <- filter(PAA_2024, grepl('Barrancabermeja', Ubicación))
unique(correosBogota$`Correo electrónico del responsable`)
unique(correosBarrancabermeja$`Nombre del responsable`)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
library(dplyr)
correosBogota <- filter(PAA_2024, grepl('Bogotá', Ubicación))
correosBarrancabermeja <- filter(PAA_2024, grepl('Barrancabermeja', Ubicación))
unique(correosBogota$`Correo electrónico del responsable`)
unique(correosBarrancabermeja$`Correo electrónico del responsable`)
correosbogotalicitacion<- filter(correosBogota$`Modalidad de selección`)
View(correosBogota)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
library(dplyr)
correosBogota <- filter(PAA_2024, grepl('Bogotá', Ubicación))
correosBarrancabermeja <- filter(PAA_2024, grepl('Barrancabermeja', Ubicación))
unique(correosBogota$`Correo electrónico del responsable`)
unique(correosBarrancabermeja$`Correo electrónico del responsable`)
unique(correosBogota$`Modalidad de selección`)
table(unique(correosBogota$`Modalidad de selección`))
table(correosBogota$`Modalidad de selección`)
library(readxl)
PAA_2024 <- read_excel("PAA_2024")
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
unique(PAA_2024$`Nombre del responsable`)
PAA_2024$`Nombre del responsable` <- tolower(PAA_2024$`Nombre del responsable`)
unique(PAA_2024$`Nombre del responsable`)
unique(PAA_2024$Ubicación)
variable.names(PAA_2024)
library(readxl)
Responsable_Ubicacion <- na.omit(PAA_2024[c(14,15)])
Responsable_Ubicacion$Ubicación <- sub(".*- ", "", Responsable_Ubicacion$Ubicación)
Responsable_Ubicacion$`Nombre del responsable` <- gsub("i", "í", Responsable_Ubicacion$`Nombre del responsable`)
unique(Responsable_Ubicacion$`Nombre del responsable`)
unique(Responsable_Ubicacion$Ubicación)
library(igraph)
bn2 <- graph.data.frame(Responsable_Ubicacion,directed=FALSE)
bipartite.mapping(bn2)
V(bn2)$type <- bipartite_mapping(bn2)$type
V(bn2)$color <- ifelse(V(bn2)$type, "red", "green")
V(bn2)$shape <- ifelse(V(bn2)$type, "circle", "square")
V(bn2)$size <- sqrt(igraph::betweenness(bn2))
E(bn2)$color <- "lightgrey"
plot(bn2, layout = layout_in_circle)
bn2.pr <- bipartite.projection(bn2)
Responsables <- bn2.pr$proj2
Ciudades <- bn2.pr$proj1
Importantes1 <- degree(Responsables)
Importantes2 <- degree(Ciudades)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
unique(PAA_2024$`Nombre del responsable`)
PAA_2024$`Nombre del responsable` <- tolower(PAA_2024$`Nombre del responsable`)
unique(PAA_2024$`Nombre del responsable`)
unique(PAA_2024$Ubicación)
variable.names(PAA_2024)
View(PAA_2024)
View(Responsable_Ubicacion)
library(igraph)
bn2 <- graph.data.frame(Responsable_Ubicacion,directed=FALSE)
bipartite.mapping(bn2)
V(bn2)$type <- bipartite_mapping(bn2)$type
V(bn2)$color <- ifelse(V(bn2)$type, "red", "green")
V(bn2)$shape <- ifelse(V(bn2)$type, "circle", "square")
V(bn2)$size <- sqrt(igraph::betweenness(bn2))
E(bn2)$color <- "lightgrey"
plot(bn2, layout = layout_in_circle)
bn2.pr <- bipartite.projection(bn2)
Responsables <- bn2.pr$proj2
Ciudades <- bn2.pr$proj1
ciudades_especificas <- c("Bogotá", "Barrancabermeja", "Barranquilla")
nodos_ciudades_especificas <- V(Ciudades)[V(Ciudades)$name %in% ciudades_especificas]
subgrafo_ciudades_especificas <- subgraph.edges(bn2, E(bn2)[V(bn2)$name %in% names(nodos_ciudades_especificas)])
V(subgrafo_ciudades_especificas)$size <- 20 + 5 * degree(subgrafo_ciudades_especificas)
E(subgrafo_ciudades_especificas)$width <- 1 + 2 * E(subgrafo_ciudades_especificas)$weight
library(igraph)
bn2 <- graph.data.frame(Responsable_Ubicacion,directed=FALSE)
bipartite.mapping(bn2)
V(bn2)$label.cex <- 0.8
V(bn2)$type <- bipartite_mapping(bn2)$type
V(bn2)$color <- ifelse(V(bn2)$type, "red", "green")
V(bn2)$shape <- ifelse(V(bn2)$type, "circle", "square")
V(bn2)$size <- sqrt(igraph::betweenness(bn2))
E(bn2)$color <- "lightgrey"
layout <- layout_with_fr(bn2)
plot(bn2, layout = layout, vertex.label.cex = V(bn2)$label.cex)
bn2.pr <- bipartite.projection(bn2)
Responsables <- bn2.pr$proj2
Ciudades <- bn2.pr$proj1
ciudades_especificas <- c("Bogotá", "Barrancabermeja", "Barranquilla")
nodos_ciudades_especificas <- V(Ciudades)[V(Ciudades)$name %in% ciudades_especificas]
subgrafo_ciudades_especificas <- subgraph.edges(bn2, E(bn2)[V(bn2)$name %in% names(nodos_ciudades_especificas)])
subgrafo_layout <- layout_with_fr(subgrafo_ciudades_especificas)
plot(subgrafo_ciudades_especificas, layout = subgrafo_layout, vertex.label.cex = 0.8)
Importantes1 <- degree(Responsables)
Importantes2 <- degree(Ciudades)
library(igraph)
bn2 <- graph.data.frame(Responsable_Ubicacion,directed=FALSE)
bipartite.mapping(bn2)
V(bn2)$label.cex <- 10.8
V(bn2)$type <- bipartite_mapping(bn2)$type
V(bn2)$color <- ifelse(V(bn2)$type, "red", "green")
V(bn2)$shape <- ifelse(V(bn2)$type, "circle", "square")
V(bn2)$size <- sqrt(igraph::betweenness(bn2))
E(bn2)$color <- "lightgrey"
layout <- layout_with_fr(bn2)
plot(bn2, layout = layout, vertex.label.cex = V(bn2)$label.cex)
bn2.pr <- bipartite.projection(bn2)
Responsables <- bn2.pr$proj2
Ciudades <- bn2.pr$proj1
ciudades_especificas <- c("Bogotá", "Barrancabermeja", "Barranquilla")
nodos_ciudades_especificas <- V(Ciudades)[V(Ciudades)$name %in% ciudades_especificas]
subgrafo_ciudades_especificas <- subgraph.edges(bn2, E(bn2)[V(bn2)$name %in% names(nodos_ciudades_especificas)])
subgrafo_layout <- layout_with_fr(subgrafo_ciudades_especificas)
plot(subgrafo_ciudades_especificas, layout = subgrafo_layout, vertex.label.cex = 0.8)
Importantes1 <- degree(Responsables)
Importantes2 <- degree(Ciudades)
library(igraph)
bn2 <- graph.data.frame(Responsable_Ubicacion,directed=FALSE)
bipartite.mapping(bn2)
V(bn2)$label.cex <- 0.8
V(bn2)$type <- bipartite_mapping(bn2)$type
V(bn2)$color <- ifelse(V(bn2)$type, "red", "green")
V(bn2)$shape <- ifelse(V(bn2)$type, "circle", "square")
V(bn2)$size <- sqrt(igraph::betweenness(bn2))
E(bn2)$color <- "lightgrey"
layout <- layout_with_fr(bn2)
plot(bn2, layout = layout, vertex.label.cex = V(bn2)$label.cex)
bn2.pr <- bipartite.projection(bn2)
Responsables <- bn2.pr$proj2
Ciudades <- bn2.pr$proj1
ciudades_especificas <- c("Bogotá", "Barrancabermeja", "Barranquilla")
nodos_ciudades_especificas <- V(Ciudades)[V(Ciudades)$name %in% ciudades_especificas]
subgrafo_ciudades_especificas <- subgraph.edges(bn2, E(bn2)[V(bn2)$name %in% names(nodos_ciudades_especificas)])
subgrafo_layout <- layout_with_fr(subgrafo_ciudades_especificas)
plot(subgrafo_ciudades_especificas, layout = subgrafo_layout, vertex.label.cex = 0.8)
Importantes1 <- degree(Responsables)
Importantes2 <- degree(Ciudades)
View(PAA_2024)
View(PAA_2024)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
# Asumiendo que ya has cargado tu base de datos en un dataframe llamado PAA_2024
# Función para obtener las iniciales de un nombre completo
obtener_iniciales <- function(nombre) {
# Dividir el nombre por espacios y tomar la primera letra de cada palabra
iniciales <- sapply(strsplit(nombre, " "), function(x) paste(substr(x, 1, 1), collapse = ""))
return(iniciales)
}
# Aplicar la función a la columna "Nombre del Responsable" para obtener las iniciales
PAA_2024$`Nombre del Responsable` <- sapply(PAA_2024$`Nombre del Responsable`, obtener_iniciales)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
unique(PAA_2024$`Nombre del responsable`)
PAA_2024$`Nombre del responsable` <- tolower(PAA_2024$`Nombre del responsable`)
unique(PAA_2024$`Nombre del responsable`)
unique(PAA_2024$Ubicación)
variable.names(PAA_2024)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
unique(PAA_2024$`Nombre del responsable`)
PAA_2024$`Nombre del responsable` <- tolower(PAA_2024$`Nombre del responsable`)
obtener_iniciales <- function(nombre) {
iniciales <- sapply(strsplit(nombre, " "), function(x) paste(substr(x, 1, 1), collapse = ""))
return(iniciales)
}
PAA_2024$`Nombre del Responsable` <- sapply(PAA_2024$`Nombre del Responsable`, obtener_iniciales)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
obtener_iniciales <- function(nombre) {
iniciales <- sapply(strsplit(nombre, " "), function(x) paste(substr(x, 1, 1), collapse = ""))
return(iniciales)
}
unique(PAA_2024$`Nombre del responsable`)
PAA_2024$`Nombre del responsable` <- tolower(PAA_2024$`Nombre del responsable`)
PAA_2024$`Nombre del Responsable` <- sapply(PAA_2024$`Nombre del Responsable`, obtener_iniciales)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
obtener_iniciales <- function(nombre) {
iniciales <- sapply(strsplit(nombre, " "), function(x) paste(substr(x, 1, 1), collapse = ""))
return(iniciales)
}
unique(PAA_2024$`Nombre del responsable`)
PAA_2024$`Nombre del Responsable` <- sapply(PAA_2024$`Nombre del Responsable`, obtener_iniciales)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
obtener_iniciales <- function(nombre) {
iniciales <- sapply(strsplit(nombre, " "), function(x) paste(substr(x, 1, 1), collapse = ""))
return(iniciales)
}
PAA_2024$`Nombre del Responsable` <- sapply(PAA_2024$`Nombre del Responsable`, obtener_iniciales)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
unique(PAA_2024$`Nombre del responsable`)
PAA_2024$`Nombre del responsable` <- tolower(PAA_2024$`Nombre del responsable`)
unique(PAA_2024$`Nombre del responsable`)
unique(PAA_2024$Ubicación)
variable.names(PAA_2024)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
unique(PAA_2024$`Nombre del responsable`)
PAA_2024$`Nombre del responsable` <- tolower(PAA_2024$`Nombre del responsable`)
obtener_iniciales <- function(nombre) {
iniciales <- sapply(strsplit(nombre, " "), function(x) paste(substr(x, 1, 1), collapse = ""))
return(iniciales)
}
PAA_2024$`Nombre del responsable` <- sapply(PAA_2024$`Nombre del responsable`, obtener_iniciales)
unique(PAA_2024$`Nombre del responsable`)
unique(PAA_2024$Ubicación)
variable.names(PAA_2024)
View(PAA_2024)
library(readxl)
Responsable_Ubicacion <- na.omit(PAA_2024[c(14,15)])
Responsable_Ubicacion$Ubicación <- sub(".*- ", "", Responsable_Ubicacion$Ubicación)
Responsable_Ubicacion$`Nombre del responsable` <- gsub("i", "í", Responsable_Ubicacion$`Nombre del responsable`)
unique(Responsable_Ubicacion$`Nombre del responsable`)
unique(Responsable_Ubicacion$Ubicación)
library(igraph)
bn2 <- graph.data.frame(Responsable_Ubicacion,directed=FALSE)
bipartite.mapping(bn2)
V(bn2)$type <- bipartite_mapping(bn2)$type
V(bn2)$color <- ifelse(V(bn2)$type, "red", "green")
V(bn2)$shape <- ifelse(V(bn2)$type, "circle", "square")
V(bn2)$size <- sqrt(igraph::betweenness(bn2))
E(bn2)$color <- "lightgrey"
plot(bn2, layout = layout_in_circle)
bn2.pr <- bipartite.projection(bn2)
Responsables <- bn2.pr$proj2
Ciudades <- bn2.pr$proj1
ciudades_especificas <- c("Bogotá", "Barrancabermeja", "Barranquilla")
nodos_ciudades_especificas <- V(Ciudades)[V(Ciudades)$name %in% ciudades_especificas]
subgrafo_ciudades_especificas <- subgraph.edges(bn2, E(bn2)[V(bn2)$name %in% names(nodos_ciudades_especificas)])
plot(subgrafo_ciudades_especificas, layout = layout_in_circle)
Importantes1 <- degree(Responsables)
Importantes2 <- degree(Ciudades)
