[["prefacio.html", "Prefacio Algunos hitos históricos La programación orientada a objetos Estándares y Sistemas de Información Ciencia aplicada a proyectos Sobre el editor de este libro", " Prefacio Nuestro planeta enfrenta problemas de gran complejidad (e.g., calentamiento global, migraciones sociales forzadas por guerras o desastres naturales). En el presente, estos problemas afectan el desempeño actual de las industrias que dependen de la explotación de recursos naturales y de continuar, terminarán por amenazar seriamente la supervivencia futura del ser humano. Debido a lo anterior, es razonable esperar que las innovaciones en fusión nuclear con dispositivos como el tokamak, la inteligencia artificial, la edición genética con tecnología CRISP-R, la impresión 3D, y la carrera espacial, sean el “As bajo la manga” que garantice la vida sostenible dentro y fuera de nuestro planeta. Las soluciones que usan “enfoques simples” están perdiendo eficacia versus las soluciones de “enfoques complejos”. La complejidad de estas soluciones se ve en la gestión de procesos productivos de plantas industriales, de aeropuertos con gran tráfico aéreo, de represas hidroeléctricas, o de plataformas de comercio electrónico. En todas estas instancias, la combinación de tecnología con talento humano ha logrado que lo impensable (e.g., viajar grandes distancias) se convierta en realidades cotidianas (e.g., abordando aviones transcontinentales). Algunos hitos históricos Muchos de los avances tecnológicos que hoy existen son directa o indirectamente el resultado de consorcios empresariales especializados en establecer normas y estándares para el “desarrollo de tecnologías orientadas a objetos” (Colomb et al. 2006). Este tipo de tecnologías ha establecido los cimientos sobre los cuales se relacionan el desarrollo de nuevos productos (Ruhe and Wohlin 2014), con herramientas de ciencia de datos e inteligencia artificial (Russell and Norvig 2021). Esta conexión se vuelve aún más evidente al considerar cómo los estándares de OMG influyen directamente en la planificación y ejecución de proyectos complejos, en los que la agilidad resalta como un elemento clave y estratégico (Robles 2012). En un artículo de Harvard Business Review, Takeuchi y Nonaka (1986) introdujeron el término SCRUM, asociándolo con un enfoque ágil para aumentar la velocidad y flexibilidad en el desarrollo de productos comerciales. Cuando Schwaber (1997) formalizó dicho término, expresó de manera explícita que SCRUM asume que el proceso de desarrollo de sistemas es un proceso impredecible y complicado que sólo puede describirse a grandes rasgos “como una progresión general donde se combinan herramientas y técnicas conocidas y viables con lo mejor que un equipo de desarrollo puede idear para construir sistemas”. Dado que estas actividades pueden variar de un momento a otro, en el proceso se utilizan controles para gestionar el proceso y el riesgo inherente. SCRUM, entendido así, resulta un enfoque de mejora para el ciclo de desarrollo incremental iterativo orientado a objetos. Esta concepción sobre el desarrollo ágil de proyectos se hizo factible gracias a “la arquitectura y los estándares para los objetos del negocio” que Cory Casanave (1997) describió como componentes del sistema de información que directamente representan al modelo de negocios de una empresa y que se desarrollan de manera útil empleando un paradigma de la programación computacional, conocido como programación orientada a objetos. La programación orientada a objetos Grosso modo, la programción orientada a objetos resalta de otros paradigmas como los de programación estructurada, programación lógica y programación funcional, por orientarse a la construcción de objetos que contienen datos o atributos y comportamientos o métodos, que sirven para representar, modelar y analizar entidades y procesos industriales empleando la programación computacional. En cierta medida, la idea de la cuarta revolución industrial o Industria 4.0 emerge como el resultado de las diferentes aplicaciones de la progrmación orientada a objetos. Para entender el alcance de la programación orientada a objetos, basta con mencionar algunas de sus herramientas emparentadas: Diseño, programación y control en robótica y sistemas robóticos para procesos de manufactura (Bison and Gini 1989). Plataformas para el modelado y la simulación basada en agentes inteligentes (Wooldridge and Jennings 1995). Sistemas distribuidos con estándares CORBA (i.e., “Common Object Request Broker Architecture”) (Sutherland et al. 1997). Sistemas SCADA (“Supervisory Control and Data Acquisition”) para el Control Supervisorio y Adquisicón de Datos (Yadav and Paul 2021). Computación Gráfica para la visualización de datos estadísticos (Wilkinson 2012). Estándares y Sistemas de Información La relación entre CORBA y SCADA puede ayudar a entender como se vinculan estas tecnologías con propósitos y aplicaciones diferentes. CORBA es una arquitectura y un conjunto de estándares que permiten que diversos componentes de software escritos en múltiples lenguajes de programación y que funcionan en diferentes computadoras, puedan trabajar juntos. Los estándares CORBA facilitan el desarrollo de aplicaciones distribuidas en entornos heterogéneos, al permitir el intercambio de mensajes y la invocación de métodos entre objetos distribuidos a través de un dispositivo intermediario (Request Broker), que facilita la comunicación o interacción entre computadores. Por otro lado, los SCADA son utilizados para supervisar y controlar procesos industriales y sistemas complejos presentes en varios sectores industriales, tales como el sector energético, el sector de servicios de agua, el sector de transporte y el de manufactura. Estos sistemas recopilan datos en tiempo real a partir de sensores y dispositivos, y resumen estos datos a trabajadores humanos, que finalmente permiten el control remoto de dispositivos y procesos industriales, con o sin intermediarios tipo CORBA. Ciencia aplicada a proyectos Los desarrollos mencionados se apoyan en fundamentos científicos que son válidos para el estudio de procesos físicos, químicos, biológicos, computacionales, económicos, o estocásticos a través de enfoques conceptuales, tales como las “simulaciones basadas en eventos”, los “algoritmos genéticos”, la “teoría de colas”, la “teoría de grafos”, o “la teoría de juegos”, entre muchas otras. Un ejemplo concreto de estos enfoques conceptuales con herramientas tecnológicas lo proporciona el estudio de Cortés-Berruecos, Gershenson y Stephens (2016) quienes aplicaron la teoría de juegos en un modelo computacional de tráfico vehicular para estudiar el rendimiento del tránsito al analizar la conducta de manejo de los conductores. Si bien el término “Gerencia Ágil de Proyectos” ha estado muy vinculado a la gestión de proyectos de desarrollo de software (Dybå, Dingsøyr, and Moe 2014), hoy dicho término puede extrapolarse a la gestión de proyectos que no necesariamente se vuelcan al desarrollo de software. Este libro ofrece una visión “actualizada” sobre la gerencia de proyectos, considerando las ventajas de la inteligencia artificial y la ciencia de datos para lidiar con la incertidumbre económica de nuestros tiempos. La Figura 0.1 ilustra en dónde debería estar situado el lector del presente libro. Figure 0.1: La Analítica de Datos para la Gestión de Proyectos de Alta Complejidad Sobre el editor de este libro Juan C. Correa es venezolano, está casado y tiene un hijo. Se ha desempeñado como docente universitario en varios países de Latino América y ha sido invitado como conferencista en universidades de Europa y Asia. Ha sido invitado como par-evaluador de cientos de artículos recibidos en decenas de revistas científicas indexadas en Web of Science o Scopus y en 2022 fue invitado como par-evaluador de proyectos de investigación y desarrollo para el área de economía y negocios organizada por la Fundación para la Ciencia y Tecnología del gobierno de Portugal. En 2023 fundó Critical Centrality Institute, un tanque de pensamiento que ofrece evidencia fundamental sobre temas críticos de nuestra sociedad. Referencias "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
